@page "/Profile"
@attribute [Authorize]
@inject AuthenticationStateProvider authProvider
@inject IBugData bugData
@inject IUserData userData
@inject NavigationManager navManager

<h1 class="page-heading text-uppercase mb-4">My Profile</h1>

<div class="row">
    <div class="col-12 close-button-section">
        <button class="btn btn-close" @onclick="ClosePage"></button>
    </div>
</div>

<div class="form-layout mb-3">
    <h2 class="my-submission-heading">My Account</h2>
    <p class="my-submission-text">
        <a href="MicrosoftIdentity/Account/EditProfile">
            Edit My Profile
        </a>
    </p>
</div>

@if (accepted?.Count > 0)
    {
        <div class="form-layout mb-3">
            <h2 class="my-submission-heading">Accepted Reports</h2>
            <p class="my-submission-text">These are your reports that are currently being worked on</p>

            @foreach (var b in accepted)
                {
                    <hr class="my-submission-separator"/>
                    <div class="fw-bold bug-detail-bug">
                        @b.Bug
                    </div>
                    <p class="my-submission-text">
                        @b.DateReported.ToString("MM.dd.yyyy")
                    </p>
                    <p class="my-submission-text">
                        Total Votes: @b.UserVotes.Count
                    </p>
                    <p class="my-submission-text">
                        @b.Category.CategoryName
                    </p>
                    <p class="my-submission-text">
                        @b.Description
                    </p>
                    @if (b.BugStatus is not null)
                        {
                            <div class="fw-bold bug-detail-bug">
                                @b.BugStatus.StatusName
                            </div>
                            <p class="my-submission-text">
                                @((MarkupString)b.OwnerNotes)
                            </p>
                        }
                }
        </div>
    }

@if (archived?.Count > 0)
    {
        <div class="form-layout mb-3">
            <h2 class="my-submission-heading">Archived Reports</h2>
            <p class="my-submission-text">These are your reports that are storing in the archive</p>

            @foreach (var b in archived)
                {
                    <hr class="my-submission-separator" />
                    <div class="fw-bold bug-detail-bug">
                        @b.Bug
                    </div>
                    <p class="my-submission-text">
                        @b.DateReported.ToString("MM.dd.yyyy")
                    </p>
                    <p class="my-submission-text">
                        Total Votes: @b.UserVotes.Count
                    </p>
                    <p class="my-submission-text">
                        @b.Category.CategoryName
                    </p>
                    <p class="my-submission-text">
                        @b.Description
                    </p>
                    @if (b.BugStatus is not null)
                        {
                            <div class="fw-bold bug-detail-bug">
                                @b.BugStatus.StatusName
                            </div>
                            <p class="my-submission-text">
                                @((MarkupString)b.OwnerNotes)
                            </p>
                        }
                }
        </div>
    }

@if (pending?.Count > 0)
    {
        <div class="form-layout mb-3">
            <h2 class="my-submission-heading">Pending Reports</h2>
            <p class="my-submission-text">These are your reports that have not yet been reviewed by the administrators</p>

            @foreach (var b in pending)
                {
                    <hr class="my-submission-separator" />
                    <div class="fw-bold bug-detail-bug">
                        @b.Bug
                    </div>
                    <p class="my-submission-text">
                        @b.DateReported.ToString("MM.dd.yyyy")
                    </p>
                    <p class="my-submission-text">
                        Total Votes: @b.UserVotes.Count
                    </p>
                    <p class="my-submission-text">
                        @b.Category.CategoryName
                    </p>
                    <p class="my-submission-text">
                        @b.Description
                    </p>
                    @if (b.BugStatus is not null)
                        {
                            <div class="fw-bold bug-detail-bug">
                                @b.BugStatus.StatusName
                            </div>
                            <p class="my-submission-text">
                                @((MarkupString)b.OwnerNotes)
                            </p>
                        }
                }
        </div>
    }

@if (rejected?.Count > 0)
    {
        <div class="form-layout mb-3">
            <h2 class="my-submission-heading">Rejected Reports</h2>
            <p class="my-submission-text">These are your reports that are not deem to be appropriate for a bug tracker or feature suggestion</p>

            @foreach (var b in rejected)
                {
                    <hr class="my-submission-separator" />
                    <div class="fw-bold bug-detail-bug">
                        @b.Bug
                    </div>
                    <p class="my-submission-text">
                        @b.DateReported.ToString("MM.dd.yyyy")
                    </p>
                    <p class="my-submission-text">
                        Total Votes: @b.UserVotes.Count
                    </p>
                    <p class="my-submission-text">
                        @b.Category.CategoryName
                    </p>
                    <p class="my-submission-text">
                        @b.Description
                    </p>
                    @if (b.BugStatus is not null)
                        {
                            <div class="fw-bold bug-detail-bug">
                                @b.BugStatus.StatusName
                            </div>
                            <p class="my-submission-text">
                                @((MarkupString)b.OwnerNotes)
                            </p>
                        }
                }
        </div>
    }

@code {
     private UserModel loggedInUser;
     private List<BugModel> submissions;
     private List<BugModel> accepted;
     private List<BugModel> archived;
     private List<BugModel> pending;
     private List<BugModel> rejected;

     protected async override Task OnInitializedAsync()
     {
          loggedInUser = await authProvider.GetUserFromAuth(userData);

          var results = await bugData.GetUsersBugs(loggedInUser.Id);

          if (loggedInUser is not null && results is not null)
          {
               submissions = results.OrderByDescending(s => s.DateReported).ToList();
               accepted = submissions.Where(s => s.AcceptedForRelease && s.Archived == false & s.Rejected == false).ToList();
               archived = submissions.Where(s => s.Archived && s.Rejected == false).ToList();
               pending = submissions.Where(s => s.AcceptedForRelease == false && s.Rejected == false).ToList();
               rejected = submissions.Where(s => s.Rejected).ToList();
          }
     }

     private void ClosePage()
     {
          navManager.NavigateTo("/");
     }
}

